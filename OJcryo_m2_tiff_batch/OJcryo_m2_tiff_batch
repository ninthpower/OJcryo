#!/bin/bash
# CURRENT: Optional arguments have been added, with options for stack saving (-S) and defects.txt files (-d).
# This program jerry-rigs multi-tiff processing in Motioncor2.

#########################################################################
# OJcryo_m2_tiff_batch v0.2, Copyright (C) 2018 Austin Dixon - Rockefeller University
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
############################################################################

##### HELP/USAGE #####
display_usage() {
  printf "*********************************
Usage:\n1) Navigate to the folder containing the .tif files you want to motion correct.\n2) Run Ojcryo_m2_tiff_batch [OPTIONS] [ARGUMENTS]\n
OPTIONS:
-g <Gain reference in .mrc format>
-p <Number of local alignment patches (n x n)>
-i <Number of iterations>
-l <Alignment error pixel tolerance>
-b <Number of Fourier domain bins>
-f <Frame dosage (e/Ã…^2)>
-a <Angstroms/px>
-V <kV>
-t <num starting frames to remove>
-u <num ending frames to remove>
-G <num GPUs to use [1...4]>
   By default, Motioncorr2 will use 1 GPU.

-R <Degrees to rotate gain reference.>
   0 = no rotation, default,
   1 = rotate 90
   2 = rotate 180
   3 = rotate 270

-F <Flip gain reference>
   0 = no flipping, default,
   1 = flip upside down (flip around horizontal axis)
   2 = flip left right (flip around vertical axis)

-d <Defects text file>
   Pass the absolute reference of your microscope's
   defects file to have those pixels corrected.

-S <Save corrected stacks>
   Save the corrected image stacks (as .mrc) in 
   addition to the motion-corrected sums (micrographs)?

-m
   Motioncorr2 will take into account motion-induced blurring."

  printf "\n\nEXAMPLE: OJcryo_m2_tiff_batch -g GR216_vf_cw90.mrc -p 5 -i 10 -l 0.5 -b 2 -f 1.2 -a 1.01 -V 300 -t 1 -u 2 -G 2\nmotioncorr2 equivalent: motioncor2 -InTiff movie_001.tif -OutMrc motioncor_mrc/aligned_movie_001.mrc -Gain GR216_vf_cw90.mrc -Patch 5 5 -Iter 10 -Tol 0.5 -FtBin 2 -FmDose 1.2 -PixSize 1.01 -Kv 300 -Throw 1 -Trunc 2 -Gpu 0 1\n*********************************\n"
}

# help tag or no arguments -> usage
if [[ ($1 == "--help") ||  ($1 == "-h") ||  ($1 == "--h") || ($1 == "-help")  ]]
then
    	display_usage
        exit 0
elif [ $# == 0 ]
then
	printf "You did not supply any parameters. Use --help to see usage...\n"
	exit 0
fi

#add passed options to a string to be used as the parameters...
options=""	# a string that will hold the results of the full command with options to Motioncorr2

##### PARSING POSITIONAL ARGUMENTS #####
while getopts ":g:p:i:l:t:u:V:a:f:b:R:F:G:d:Sm" opt; do
 case $opt in
  g)
   gainref=$OPTARG >&2	# Gain reference (>&2 means shift argument positions by two)
   options="$options-Gain $gainref "	# append options to command string
   ;;
  p)
   patch=$OPTARG >&2	# patch x patch alignments
   options="$options-Patch $patch $patch "
   ;;
  i)
   iter=$OPTARG >&2	# number of iterations to run alignment
   options="$options-Iter $iter "
   ;;
  l)
   tol=$OPTARG >&2	# alignment error pixel tolerance
   options="$options-Tol $tol "
   ;;
  t)
   throw=$OPTARG >&2	# number of initial frames to throw away
   options="$options-Throw $throw "
   ;;
  u)
   trunc=$OPTARG >&2	# number of trailing frames to throw away
   options="$options-Trunc $trunc "
   ;;
  V)
   kV=$OPTARG >&2	# voltage in kV
   options="$options-Kv $kV "
   ;;
  a)
   apix=$OPTARG >&2	# Angstroms per pixel
   options="$options-PixSize $apix "
   ;;
  f)
   fmdose=$OPTARG >&2	# frame dosage for dose-weighting
   options="$options-FmDose $fmdose "
   ;;
  b)
   bin=$OPTARG >&2	# image binning through Fourier domain
   options="$options-FtBin $bin "
   ;;
  R)
   rotategain=$OPTARG >&2	# rotate gain reference
   options="$options-RotGain $rotategain "
   ;;
  F)
   flipgain=$OPTARG >&2		# flip gain reference
   options="$options-FlipGain $flipgain "
   ;;
  G)
   GPU=$OPTARG >&2		# number of GPUs to use
   if [ $GPU == 1 ]
   then
    options="$options-Gpu 0 "	# use first GPU
   elif [ $GPU == 2 ]
   then
    options="$options-Gpu 0 1 "	# use first two GPUs
   elif [ $GPU == 3 ]
   then
    options="$options-Gpu 0 1 2 "	# use first three GPUs
   elif [ $GPU == 4 ]
   then
    options="$options-Gpu 0 1 2 3 "	# use first four GPUs
   else
    options="$options-Gpu 0 "	# use first GPU
   fi
   ;;
  d)
   defects=$OPTARG >&2		# defects file for camera defects
   options="$options-DefectFile $defects "
   ;;
  S)
   options="$options-OutStack 1 " >&2		# Save corrected stacks along with sums
   ;;
  m)
   options="$options-InFmMotion 1 " >&2	   #correct for motion-induced blurring of each frame (motioncorr v 1.1.0+)
   ;;
  \?)
   printf "Invalid option: -$OPTARG" >&2
   printf "\n"
   display_usage
   exit 1
   ;;
  :)
   printf "Option -$OPTARG expected an argument." >&2
   display_usage
   exit 1
   ;;
esac
done

##DEBUG
##printf "\nmotioncor2 -InTiff stuff.tif -OutMrc motioncor_mrc/file.mrc $options \n"
##exit 0

# get total number of tifs in this folder
numtiffs=$(ls -F | grep .tif | wc -l)

# make these directories if not made already
mkdir -p motioncor_mrc
mkdir -p Finished_tif


################## MAIN SCRIPT #################
# Prep for showing number of images left
#printf "### Images Remaining: ###\n"

# Perform Motioncor2 on all the tiff files in the working directory
for i in *.tif; do
  echo -en "\r\033[KImages Remaining: $numtiffs\n"		# show number of files remaining to be processed

######## DEPRECATED  file=$(echo ${i} | cut -f 1 -d '.')   # get filename without extension
  file=$(basename -- "$i")	# get filename alone
  extension="${file##*.}"	# remove filename extension
  file="${file%.*}"		# get filename sans extension

###################
# " Drift correction "
###################
## OLD VERSION  motioncor2 -InTiff ${i} -OutMrc motioncor_mrc/$file.mrc -Gain $gainref -Patch $patch $patch -Iter $iter -Tol $tol -FtBin $bin -FmDose $fmdose -PixSize $apix -Kv $kV -Throw $throw -Trunc $trunc -Gpu 0 1 > $file_m2output.txt
##  motioncor2 -InTiff ${i} -OutMrc motioncor_mrc/$file.mrc "$options" > $file_m2output.txt	# motioncor2 parses options independent of position, so a concatenated string of whatever the user entered will still work.
  motioncor2 -InTiff ${i} -OutMrc motioncor_mrc/$file.mrc $options >> output.txt	# motioncor2 parses options independent of position, so a concatenated string of whatever the user entered will still work.


###############################################################
#" Move tiffs to Finished_tifs "
###############################################################
  mv ${i} Finished_tif

###########################
# " Show remaining images "
###########################
  numtiffs=$[$numtiffs-1]
done

exit 1
